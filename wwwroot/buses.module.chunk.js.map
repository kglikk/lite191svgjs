{"version":3,"sources":["./src/app/+data/buses/buses-routing.module.ts","./src/app/+data/buses/buses.component.css","./src/app/+data/buses/buses.component.html","./src/app/+data/buses/buses.component.ts","./src/app/+data/buses/buses.module.ts"],"names":[],"mappings":"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","file":"buses.module.chunk.js","sourcesContent":["\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BusesComponent } from './buses.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: BusesComponent,\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BusesRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/+data/buses/buses-routing.module.ts","module.exports = \"input[type=\\\"file\\\"] {\\n  display: none;\\n}\\n\\n.custom-file-upload {\\n /* border: 1px solid #ccc; */\\n  display: inline-block;\\n  padding: 6px 12px;\\n  cursor: pointer;\\n \\n}\\n\\n.custom-file-download {\\n    border: none;\\n    padding: 0;\\n    background: none;\\n  \\n}\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/+data/buses/buses.component.css\n// module id = ./src/app/+data/buses/buses.component.css\n// module chunks = buses.module","module.exports = \"<!-- MAIN CONTENT -->\\n<div *ngIf=\\\"show;else otherContent\\\" id=\\\"content\\\">\\n\\n  <div class=\\\"row\\\">\\n    <sa-big-breadcrumbs [items]=\\\"['Data', 'Buses']\\\" icon=\\\"table\\\" class=\\\"col-xs-12 col-sm-7 col-md-7 col-lg-4\\\"></sa-big-breadcrumbs>\\n    <!-- <sa-stats></sa-stats> -->\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class='col-sm-12' style=\\\"margin-top: 10px; margin-bottom: 10px\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=onAddRow()>Add Bus</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=removeSelected()>Delete selected</button>\\n      <!--\\n      <button type=\\\"button\\\" class=\\\"btn btn-basic\\\" (click)=importExcel()>Import Excel</button>\\n      -->\\n      <label for=\\\"file-upload\\\" class=\\\"custom-file-upload\\\">\\n        <i class=\\\"fa fa-cloud-upload\\\"></i> Import Data (Excel)\\n      </label>\\n      <input id=\\\"file-upload\\\" type=\\\"file\\\" (change)=\\\"onFileUpload($event)\\\" multiple=\\\"false\\\"/>\\n\\n      <!--\\n      <label for=\\\"file-download\\\" class=\\\"custom-file-download\\\">        \\n      </label>\\n    -->\\n      <button class=\\\"custom-file-download\\\" id=\\\"file-download\\\" (click)=\\\"export()\\\" > <i class=\\\"fa fa-cloud-download\\\"></i> Export Data (Excel) </button>\\n    <!--  <input type=\\\"file\\\" class=\\\"btn btn-basic\\\" (change)=\\\"onFileChange($event)\\\" multiple=\\\"false\\\" />-->\\n      <!--\\n      <import-file></import-file>\\n      -->\\n    </div>\\n  </div>\\n\\n  <!-- widget grid -->\\n  <sa-widgets-grid>\\n\\n\\n    <div class=\\\"row\\\">\\n      <article class=\\\"col-sm-12\\\">\\n\\n        <div class=\\\"table-responsive\\\" style=\\\"width: 100%; height: 500px;\\\">\\n          <ag-grid-angular #agGrid style=\\\"width: 100%;height: 100%;\\\" class=\\\"ag-fresh\\\" [gridOptions]=\\\"gridOptions\\\" [rowData]=\\\"rowData\\\">\\n            <!--  [columnDefs]=\\\"columnDefs\\\" [defaultColDef]=\\\"defaultColDef\\\" -->\\n          </ag-grid-angular>\\n        </div>\\n        <!-- \\n        <sa-widget [editbutton]=\\\"false\\\" color=\\\"darken\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\">\\n              <i class=\\\"fa fa-table\\\"></i>\\n            </span>\\n\\n            <h2>External Grids</h2>\\n          </header>\\n        \\n            <div class=\\\"widget-body no-padding\\\">\\n              <alert type=\\\"info\\\" class=\\\"no-margin fade in\\\" dismisser=\\\"\\\"> \\n                <i class=\\\"fa-fw fa fa-info\\\"></i>\\n                Adds zebra-striping to table row within <code>&lt;table&gt;</code> by adding the <code>.table-striped</code>\\n                with the base class\\n              </alert>\\n              \\n           \\n\\n               \\n\\n              </div>\\n\\n          \\n        </sa-widget>\\n        -->\\n      </article>\\n    </div>\\n\\n  </sa-widgets-grid>\\n</div>\\n\\n<ng-template #otherContent>Please open or create project in the Home tab first</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/+data/buses/buses.component.html\n// module id = ./src/app/+data/buses/buses.component.html\n// module chunks = buses.module","//import { XLSX } from 'xlsx';\nimport * as XLSX from 'xlsx';\n//type AOA = any[][];\n\n\nimport { AuthService } from 'app/services/auth/auth.service';\nimport { ProjectService } from './../../services/project.service';\nimport { ShowDataService } from 'app/services/show-data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FadeInTop } from \"../../shared/animations/fade-in-top.decorator\";\n\n\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { GridOptions } from \"ag-grid/main\";\nimport {Buses} from './buses'\n\n@FadeInTop()\n@Component({\n  templateUrl: './buses.component.html',\n  styleUrls: ['./buses.component.css']\n\n})\nexport class BusesComponent implements OnInit {\n\n  public bus: Buses[] = []; \n\n  gridOptions: GridOptions;\n  rowData: Object; //było any[]\n  // @Inject('BASE_URL') baseUrl: string;\n  show: boolean;\n  name: string;\n  ID:number\n  projectId: number;\n  projectName: string; \n\n \n  constructor(public http: HttpClient, public showData: ShowDataService, public projectService: ProjectService, public authService: AuthService) {\n    \n    //czy pokazywać dane czy nie w zależności od tego czy projekt jest otwarty\n    this.showData.currentShow.subscribe(show => this.show = show);\n\n    //this.projectService.currentProjectName.subscribe(name => this.name = name)\n\n    //obserwuj ID projektu, który jest otwarty, żeby na tej podstawie wczytywać dane\n    this.projectService.currentProjectId.subscribe(projectId => this.projectId = projectId)\n    let projectIdInside = this.projectId;\n\n    this.projectService.currentProjectName.subscribe(projectName => this.projectName = projectName)\n\n\n    // we pass an empty gridOptions in, so we can grab the api out\n    this.gridOptions = <GridOptions>{\n\n      onGridReady: () => {\n        this.gridOptions.api.sizeColumnsToFit(); //make the currently visible columns fit the screen.\n      },\n    };\n\n    this.gridOptions = {\n\n      //gdy zmieniamy wartości w komórce, zmienia sie takze wartosc na serwerze \n      onCellValueChanged: function (event) {\n        let headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n        //jeśli zmieniona wartość jest ok     \n        console.log(\"onCellValueChanged\");\n        http.put('api/Bus/' + event.data.id, JSON.stringify({ ID: event.data.id, Name: event.data.name, NodeNo: event.data.nodeNo, NominalVoltage: event.data.nominalVoltage, ProjectId: projectIdInside }), { headers }).subscribe();\n      }, \n\n\n      onCellEditingStopped: () => {\n        console.log(\"onCellEditingStopped\");\n      },\n      onRowDataChanged: () => {\n        console.log(\"onRowDataChanged\");\n      },\n\n      singleClickEdit: false,\n      stopEditingWhenGridLosesFocus: true,\n\n      enableSorting: true,\n      enableFilter: true,\n      enableColResize: true,\n      animateRows: true,\n      rowSelection: 'multiple',\n      columnDefs: [\n        // put the three columns into a group\n        {\n          headerName: 'Load flow data',\n          children: [\n            { headerName: \"Name\", field: \"name\", /*width: 110*/ },\n            { headerName: \"Bus No.\", field: \"nodeNo\", type: \"numericColumn\" /*width: 110*/ },\n            { headerName: \"Nominal Voltage [kV]\", field: \"nominalVoltage\", /*width: 100,*/ type: \"numericColumn\" },\n            \n          ]\n        }\n      ],\n      defaultColDef: {\n        //enableCellChangeFlash: true,\n        // set every column width  \n        // width: 150,\n        // make every column editable\n        editable: true,\n        // make every column use 'text' filter by default\n        filter: 'text'\n      },\n    }\n\n    //wczytaj dane z bazy danych bazując na nazwie projektu\n    http.get('api/Bus/GetBasedOnProject/' + this.projectId).subscribe(\n      result => { this.rowData = result },\n    );\n\n\n    /*\n    this.http.get('api/ExternalGrid/Get').subscribe(\n      result => { this.rowData = result.json(); },\n    ); */\n\n  }\n\n  ngOnInit() {\n\n    //gdy wstawiam tutaj dane z konstruktora mam problem z http.put - this. ...\n\n\n  }\n\n  //sprawdzanie czy wprowadzona liczba do tabeli jest liczbą\n\n  numberValueFormatter(params) {\n    /*\n    if (isNaN(Number(params.value))) {\n      return \"\";dffsdfsdfsdfsdfsfsfsfddfsfs\n    } else {\n      return params.value;\n    }\n    */\n  \n  }\n  //ustawienie wartości jeśli jest liczbą\n  numberValueSetter(params) {\n    if (isNaN(parseFloat(params.newValue)) || !isFinite(params.newValue)) {\n      alert(\"It must be a number. Please use dot '.'\");\n      return false; // don't set invalid numbers!\n    }\n\n  \n    if (params.colDef.field == \"nominalVoltage\") {\n      if (params.newValue < 0 ) {\n        alert(\"Should be greater than zero\");\n        return false; // don't set invalid numbers!\n\n      } else {\n        params.data.nomVoltage = params.newValue;\n      }\n    }\n   \n    return true;\n    //w bazie danych SQL dane są aktualizowane w onCellValueChanged\n  }\n\n  //zaktualizowanie tabeli\n  printResult(res) {\n    console.log('---------------------------------------')\n    if (res.add) {\n      res.add.forEach(function (rowNode) {\n\n        console.log('Added Row Node', rowNode);\n      });\n    }\n    if (res.remove) {\n      res.remove.forEach(function (rowNode) {\n        console.log('Removed Row Node', rowNode);\n      });\n    }\n    if (res.update) {\n      res.update.forEach(function (rowNode) {\n        console.log('Updated Row Node', rowNode);\n      });\n    }\n  }\n\n\n  removeSelected() {\n    let headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n\n    if (window.confirm('Are you sure you want to delete?')) {\n      //front-end\n      var selectedData = this.gridOptions.api.getSelectedRows();\n\n      let rowIdArray: number[] = [];\n      this.gridOptions.api.forEachNode(function (node) {\n        console.log(node.data.id);\n\n        if (node.isSelected()) {\n          rowIdArray.push(node.data.id);\n        }\n      });\n\n      var res = this.gridOptions.api.updateRowData({ remove: selectedData });\n      this.printResult(res);\n      //back-end\n\n\n      for (var rowId = 0; rowId < rowIdArray.length; rowId++) {\n        this.http.delete('api/Bus/' + rowIdArray[rowId], { headers }).subscribe();\n      }\n    } else { }\n  }\n\n  onAddRow() {\n    let headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n\n    var newItem = {\n      //id: 0,\n      name: \"Bus\",\n      nodeNo: 0,\n      nominalVoltage: 0,\n     \n      //projectId: 2\n    };\n\n    this.http.post('api/Bus', JSON.stringify({ ID: 0, Name: newItem.name, NodeNo: newItem.nodeNo, NominalVoltage: newItem.nominalVoltage,ProjectId: this.projectId }), { headers }).subscribe((data: Object) => {\n      //Czekamy na wykonanie sie POST, zeby zrobic GET i WPISAC dane do tabeli we front end\n\n      // po operacji post ustawiany jest specyficzny ID w bazie SQL, aby dany wiersz w front-end miał taki sam ID, musze sciagnac te dane do frontendu\n      this.http.get('api/Bus/GetBasedOnProject/' + this.projectId).subscribe(\n        result => { this.rowData = result; },\n      );\n\n      var res = this.gridOptions.api.updateRowData({ add: [newItem] });\n      this.printResult(res);\n    });\n  }\n\n\n  // pull out the values we're after, converting it into an array of rowData\n  populateGrid(workbook) {\n    let headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n\n    // our data is in the first sheet\n    var firstSheetName = workbook.SheetNames[0];\n    var worksheet = workbook.Sheets[firstSheetName];\n\n    // we expect the following columns to be present\n    var columns = {\n      'A': 'name',\n      'B': 'nodeNo',\n      'C': 'nomVoltage',         \n    };\n    \n    var rowData = [];\n\n    // start at the 2nd row - the first row are the headers\n    var rowIndex = 2;\n\n    // iterate over the worksheet pulling out the columns we're expecting\n    while (worksheet['A' + rowIndex]) {\n      var row = {};\n      Object.keys(columns).forEach(function (column) {\n        row[columns[column]] = worksheet[column + rowIndex].w;\n      });\n      // console.log(\"JSON.stringify(row\" + JSON.stringify(row)); \n\n      rowData.push(row);\n      //połącz dwa JSONY, żeby dodać numer projektu\n      var resultRow = {\n        ...{\n          ID: 0\n        },\n        ...row,\n        ... {\n          //id: 0,         \n          projectId: this.projectId\n        }\n      };\n    \n\n     this.http.post('api/Bus',resultRow , { headers }).subscribe((data: Object) => {\n      //Czekamy na wykonanie sie POST, zeby zrobic GET i WPISAC dane do tabeli we front end\n\n      // po operacji post ustawiany jest specyficzny ID w bazie SQL, aby dany wiersz w front-end miał taki sam ID, musze sciagnac te dane do frontendu\n      this.http.get('api/Bus/GetBasedOnProject/' + this.projectId).subscribe(\n        result => { this.rowData = result; },\n      );\n\n      var res = this.gridOptions.api.updateRowData({ add: [row] });\n      this.printResult(res);\n    });\n      rowIndex++;\n    } \n  }\n\n  wopts: XLSX.WritingOptions = { bookType: 'xlsx', type: 'array' };\n\n  onFileUpload(evt: any) {\n    /* wire up file reader */\n    const target: DataTransfer = <DataTransfer>(evt.target);\n    if (target.files.length !== 1) throw new Error('Cannot use multiple files');\n    const reader: FileReader = new FileReader();\n    reader.onload = (e: any) => {\n      /* read workbook */\n      const bstr: string = e.target.result;\n      const wb: XLSX.WorkBook = XLSX.read(bstr, { type: 'binary' });\n      this.populateGrid(wb);\n    };\n    reader.readAsBinaryString(target.files[0]); \n  }\n\n  export(): void {\n    //zbierz dane z serwera i zapisz do pliku xlsx\n    this.http.get('api/Bus/GetBasedOnProjectWithoutColumns/' + this.projectId).subscribe((data: any) => {\n      // generate worksheet\n      const ws: XLSX.WorkSheet = XLSX.utils.json_to_sheet(data);\n\n      // generate workbook and add the worksheet \n      const wb: XLSX.WorkBook = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n\n      /* save to file */\n      //XLSX.writeFile(wb, 'externalgrid_'+this.projectName+'.xlsx');\n      XLSX.writeFile(wb, 'bus_' + this.projectName + '.xlsx');\n   });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/+data/buses/buses.component.ts","\n\n\nimport { NgModule, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { BusesRoutingModule } from './buses-routing.module';\nimport { BusesComponent } from './buses.component';\n\nimport {SmartadminModule} from \"app/shared/smartadmin.module\";\n\n\nimport {AgGridModule} from 'ag-grid-angular/main';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    SmartadminModule,\n    AgGridModule.withComponents([]),\n    BusesRoutingModule\n    \n  ],\n  declarations: [\n    BusesComponent\n  ],\n  providers: [\n    { provide: 'BASE_URL', useFactory: getBaseUrl }\n  ] \n})\nexport class BusesModule { }\n\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/+data/buses/buses.module.ts"],"sourceRoot":"webpack:///"}
{"version":3,"sources":["./src/app/+diagram/diagram.component.css","./src/app/+diagram/diagram.component.html","./src/app/+diagram/diagram.component.ts","./src/app/+diagram/diagram.module.ts","./src/app/+diagram/diagram.routing.ts","./src/app/components/externalgrid-form/externalgrid-form.component.css","./src/app/components/externalgrid-form/externalgrid-form.component.html","./src/app/components/externalgrid-form/externalgrid-form.component.ts"],"names":[],"mappings":"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","file":"diagram.module.chunk.js","sourcesContent":["module.exports = \"html, body {\\n    margin: 2px;    \\n}\\n\\n#extGridDIV{\\n    position: absolute;\\n    top: 0px;\\n    left: 0px;\\n    width : 32px;\\n    height : 32px;     \\n}\\n\\n#busbarDIV{\\n    position: absolute;\\n    top: 0px;\\n    left: 32px;\\n    width : 32px;\\n    height : 32px;      \\n}\\n\\n#loadDIV{\\n    position: absolute;\\n    top: 0px;\\n    left: 64px;\\n    width : 32px;\\n    height : 32px;      \\n}\\n\\n#transformerDIV{\\n    position: absolute;\\n    top: 0px;\\n    left: 96px;         \\n}\\n\\n#svgArea{\\n    position: absolute;   \\n    height: 100%;\\n    width:100%;      \\n    background: lightgrey; \\n}\\n\\n.custom-menu {\\n    display: none; \\n  /*  z-index: 1000;*/\\n    position: absolute;\\n    overflow: hidden;\\n    border: 1px solid #CCC;\\n    white-space: nowrap;\\n    font-family: sans-serif;\\n    background: #FFF;\\n    color: #333;\\n    border-radius: 5px;\\n}\\n\\n.custom-menu-polyline {\\n    display: none; \\n  /*  z-index: 1000;*/\\n    position: absolute;\\n    overflow: hidden;\\n    border: 1px solid #CCC;\\n    white-space: nowrap;\\n    font-family: sans-serif;\\n    background: #FFF;\\n    color: #333;\\n    border-radius: 5px;\\n}\\n\\n.custom-menu-busbar {\\n    display: none; \\n  /*  z-index: 1000;*/\\n    position: absolute;\\n    overflow: hidden;\\n    border: 1px solid #CCC;\\n    white-space: nowrap;\\n    font-family: sans-serif;\\n    background: #FFF;\\n    color: #333;\\n    border-radius: 5px;\\n}\\n\\n.custom-menu-draggablenested {\\n    display: none; \\n  /*  z-index: 1000;*/\\n    position: absolute;\\n    overflow: hidden;\\n    border: 1px solid #CCC;\\n    white-space: nowrap;\\n    font-family: sans-serif;\\n    background: #FFF;\\n    color: #333;\\n    border-radius: 5px;\\n}\\n\\n.custom-menu li {\\n    padding: 8px 12px;\\n    cursor: pointer;\\n}\\n\\n.custom-menu-polyline li {\\n    padding: 8px 12px;\\n    cursor: pointer;\\n}\\n\\n.custom-menu-busbar li {\\n    padding: 8px 12px;\\n    cursor: pointer;\\n}\\n\\n.custom-menu-draggablenested li {\\n    padding: 8px 12px;\\n    cursor: pointer;\\n}\\n\\n.custom-menu li:hover {\\n    background-color: #DEF;\\n}\\n\\n.custom-menu-polyline li:hover {\\n    background-color: #DEF;\\n}\\n\\n.custom-menu-busbar li:hover {\\n    background-color: #DEF;\\n}\\n\\n.custom-menu-draggablenested li:hover {\\n    background-color: #DEF;\\n}\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/+diagram/diagram.component.css\n// module id = ./src/app/+diagram/diagram.component.css\n// module chunks = diagram.module","module.exports = \" \\n<div *ngIf=\\\"show;else otherContent\\\" id=\\\"content\\\">\\n\\n\\n  <div  id=\\\"svgAreaDiv\\\"  style=\\\"width: 100%; height: 2000px\\\">\\n\\n\\n    <svg id=\\\"svgArea\\\" (drop)=\\\"drop_handler($event);\\\" (dragover)=\\\"dragover_handler($event);\\\">\\n     \\n\\n    </svg>\\n\\n    <externalgrid-form></externalgrid-form>\\n\\n  </div>\\n\\n\\n  <ul class=\\\"custom-menu\\\">\\n    <li (click)=\\\"rotate()\\\">Rotate</li>\\n    <li (click)=\\\"deleteObject()\\\">Delete</li>\\n  </ul>\\n\\n  <ul class=\\\"custom-menu-polyline\\\">\\n\\n    <li (click)=\\\"deletePolyline()\\\">Delete</li>\\n  </ul>\\n\\n  <ul class=\\\"custom-menu-busbar\\\">\\n\\n    <li (click)=\\\"deleteBusbar()\\\">Delete</li>\\n  </ul>\\n\\n  <ul class=\\\"custom-menu-draggablenested\\\">\\n\\n    <li (click)=\\\"deleteObjectsInDraggableNested()\\\">Delete</li>\\n  </ul>\\n\\n\\n\\n</div>\\n\\n<ng-template #otherContent>Please open or create project in the Home tab first</ng-template>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/+diagram/diagram.component.html\n// module id = ./src/app/+diagram/diagram.component.html\n// module chunks = diagram.module","import { ExternalGrids } from './../+data/externalgrids/externalgrids';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { ProjectService } from './../services/project.service';\nimport { AuthService } from './../services/auth/auth.service';\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ShowDataService } from \"../services/show-data.service\";\nimport { SvgAreaService } from \"../services/svgarea.service\";\n\ndeclare const SVG: any; //tells typescript that the import does really exist but you just can't know it because you didn't find the definition types file\ndeclare const mutationObserver: any;\ndeclare const $: any;\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json', 'charset': 'utf-8' })\n};\n\n@Component({\n  selector: 'app-diagram',\n  templateUrl: './diagram.component.html',\n  styleUrls: ['./diagram.component.css']\n})\n\nexport class DiagramComponent implements OnInit, OnDestroy {\n\n  show: boolean\n  projectId: number\n  svgArea: any\n\n  constructor(public http: HttpClient,\n    private auth: AuthService,\n    private projectService: ProjectService,\n    private svgAreaService: SvgAreaService,\n    private showData: ShowDataService) {\n\n    //pokazuj diagram w zależności od tego czy projekt jest otwarty\n    // this.showData.currentShow.subscribe(show => this.show = show);\n    //NA CZAS PRACOWANIA NAD FRONT-END\n    this.showData.currentShow.subscribe(show => this.show = true);\n  }\n\n\n  ngOnInit() {\n\n    //obserwuj ID projektu, który jest otwarty, żeby na tej podstawie wczytywać dane\n    // this.projectService.currentProjectId.subscribe(projectId => this.projectId = projectId)\n\n    //NA CZAS PRACOWANIA NAD FRONT-END\n    this.projectService.currentProjectId.subscribe(projectId => this.projectId = 8)\n    //let projectIdInside = this.projectId;\n  }\n\n  //Respond after Angular initializes the component's views and child views / the view that a directive is in.\n  //Called once after the first ngAfterContentChecked().\n  ngAfterViewInit() {\n    //jesli jest wybrany projekt\n    if (this.show == true && this.show != null) {\n\n      //wczytaj wszystkie zapamietane elementy do svgArea\n      this.svgAreaService.getSvgArea()\n\n      var paper = SVG.get('svgArea')\n\n      //utworz obiekt ktory bedzie przenoszony\n      var draggableNested = paper.nested()\n      draggableNested.attr('id', 'draggableNested')\n      draggableNested.attr('viewbox', '0 0 100% 100%')\n      draggableNested.attr('x', '0')\n      draggableNested.attr('y', '0')\n\n      contextmenuFunction() //wylacz reakcje svgArea na prawy przycisk\n      clickSVGArea()\n      selectMultipleGroups()\n      selectShift() //zaznaczaj elementy przy nacisnietym Shift\n\n    }\n  }\n\n  ngOnDestroy() {\n\n    //jesli jest wybrany projekt\n    if (this.show != false) {\n      //zapamietaj wszystkie elementy w svgArea\n      this.svgAreaService.setSvgArea()\n    }\n    document.removeEventListener('keydown', keydownshift)\n    document.removeEventListener('keyup', keyupshift)\n  }\n\n\n  // rozpoczęcie przenoszenia danego elementu do szarego obszaru 'svgArea'\n  dragstart_handler(ev) {\n    // Add the target element's id to the data transfer object\n    ev.dataTransfer.effectsAllowed = 'copy'\n\n    // przenoś tylko svg, który jest dzieckiem div-a. Drag nie działa w HTML5 jeśli chciałbym przenosić bezpośrednio obiekt svg.\n    ev.dataTransfer.setData('text/plain', $(ev.target).children().attr('id'))\n  }\n\n  // wykonanie operacji przy upuszczeniu danego elementu\n  drop_handler(ev) {\n    ev.preventDefault()\n\n    // klasa przenoszonego elementu DIV\n    var idDataSVG = ev.dataTransfer.getData('text')\n\n    //jesli przeniesiony obiekt to external grid\n    if (idDataSVG == 'extGrid') {\n\n      //utworz element oraz odpowiednio umiesc go w obszarze svgArea\n      var gridSize = 10\n      var externalgrid = SVG.get('svgArea').externalgrid().center(ev.offsetX, ev.offsetY)\n\n\n      //zapamietaj stan svg (pozycja i rotacja)\n      var svgXML = '<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"schemat\" attr=\"unselected\" class=\"noshift\" x=\"' + externalgrid.attr('x') + '\" y=\"' + externalgrid.attr('y') + '\" style=\"overflow: visible;\"><d=\"M0,0,20,0,20,20,0,20,0,0.2,19.5,10,0,20M20,20,0.5,10,20,0\" style=\"stroke: rgb(0, 0, 0); fill: rgb(255, 255, 255); cursor: pointer; stroke-width: 0.5;\"/><circle id=\"SvgjsCircle1018\" r=\"2\" cx=\"10\" cy=\"18\" stroke=\"#000000\" stroke-width=\"0.5\" class=\"free\"/></svg>'\n\n      //wpisz do bazy danych\n      var stringifiedNewItem = JSON.stringify({\n        ID: 0,\n        Name: 'z schematu',\n        NodeNo: 0,\n        NodeType: 'SL',\n        VoltageAngle: 0,\n        VoltageSetpoint: 0,\n        ActivePower: 0,\n        ReactivePower: 0,\n        ProjectId: this.projectId,\n        svgXML: svgXML\n      })\n\n      this.http.post('api/ExternalGrid', stringifiedNewItem, httpOptions).subscribe(\n        extgrid => { },\n        err => { console.log(err) },\n        () => {\n          //przypisz ID elementowi svg      \n          this.svgAreaService.getExternalGrid().subscribe(\n            results => {\n\n              //jeśli jest już jakiś element w bazie\n              if (results.length != 0) {\n                var lastElement = results[results.length - 1]\n                externalgrid.attr('id', lastElement.id)\n              }\n            }\n          )\n        })\n\n      //ustaw element w siatce\n      externalgrid.dmove(- externalgrid.attr('x') % gridSize, - externalgrid.attr('y') % gridSize)\n\n      //obserwuj zmiany\n      mutationObserver(externalgrid)\n    }\n \n\n    if (idDataSVG == 'busbar') {\n\n      //utworz element oraz odpowiednio umiesc go w obszarze svgArea\n      var gridSize = 10\n      var busbar = SVG.get('svgArea').busbar().center(ev.offsetX, ev.offsetY)\n\n      //zapamietaj stan svg (pozycja i rotacja)\n      var svgXML = '<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"schemat\" attr=\"unselected\" class=\"noshift\" x=\"' + busbar.attr('x') + '\" y=\"' + busbar.attr('y') + '\" style=\"overflow: visible;\"><path d=\"M2,16,30,16\" style=\"stroke: rgb(0, 0, 0); fill: rgb(255, 255, 255); cursor: pointer; stroke-width: 1;\"/><circle r=\"2\" cx=\"2\" cy=\"16\" stroke=\"#000000\" stroke-width=\"1\" class=\"free\"/><circle r=\"2\" cx=\"16\" cy=\"16\" stroke=\"#000000\" stroke-width=\"1\" class=\"free\"/><circle r=\"2\" cx=\"30\" cy=\"16\" stroke=\"#000000\" stroke-width=\"1\" class=\"free\"/></svg>'\n \n      var stringifiedNewItem = JSON.stringify({\n        ID: 0,\n        Name: 'z schematu',\n        NodeNo: 0,\n        NominalVoltage: 0,\n        ProjectId: this.projectId,\n        svgXML: svgXML\n      })\n    \n      this.http.post('api/Bus', stringifiedNewItem, httpOptions).subscribe(\n        busbar => { },\n        err => { console.log(err) },\n        () => {\n          //przypisz ID elementowi svg      \n          this.svgAreaService.getBusbar().subscribe(\n            results => {\n\n              //jeśli jest już jakiś element w bazie\n              if (results.length != 0) {\n                var lastElement = results[results.length - 1]\n                busbar.attr('id', lastElement.id)\n              }\n            }\n          )\n        }) \n      //ustaw element w siatce\n      busbar.dmove(- busbar.attr('x') % gridSize, - busbar.attr('y') % gridSize)\n      \n      //obserwuj zmiany\n      mutationObserver(busbar) \n    }\n                  \n     \n    if (idDataSVG == 'transformer') {\n\n      //utworz element oraz odpowiednio umiesc go w obszarze svgArea\n      var gridSize = 10\n      var externalgrid = SVG.get('svgArea').externalgrid().center(ev.clientX - $('#' + idDataSVG).offset().left - $('.draggableDIV').parent().width() - $('.draggableDIV').width(), ev.clientY - $('.draggableDIV').parent().height() - $('.draggableDIV').height())\n\n      //zapamietaj stan svg (pozycja i rotacja)\n      var svgXML = '<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"schemat\" attr=\"unselected\" class=\"noshift\" x=\"' + externalgrid.attr('x') + '\" y=\"' + externalgrid.attr('y') + '\" style=\"overflow: visible;\"><path id=\"SvgjsPath1017\" d=\"M0,0,20,0,20,20,0,20,0,0.2,19.5,10,0,20M20,20,0.5,10,20,0\" style=\"stroke: rgb(0, 0, 0); fill: rgb(255, 255, 255); cursor: pointer; stroke-width: 0.5;\"/><circle id=\"SvgjsCircle1018\" r=\"2\" cx=\"10\" cy=\"18\" stroke=\"#000000\" stroke-width=\"0.5\" class=\"free\"/></svg>'\n\n      var stringifiedNewItem = JSON.stringify({\n        ID: 0,\n        Name: 'z schematu',\n        NodeNo: 0,\n        NodeType: 'SL',\n        VoltageAngle: 0,\n        VoltageSetpoint: 0,\n        ActivePower: 0,\n        ReactivePower: 0,\n        ProjectId: this.projectId,\n        svgXML: svgXML\n      })\n    \n      this.http.post('api/ExternalGrid', stringifiedNewItem, httpOptions).subscribe(\n        extgrid => { },\n        err => { console.log(err) },\n        () => {\n          //przypisz ID elementowi svg      \n          this.svgAreaService.getExternalGrid().subscribe(\n            results => {\n\n              //jeśli jest już jakiś element w bazie\n              if (results.length != 0) {\n                var lastElement = results[results.length - 1]\n                externalgrid.attr('id', lastElement.id)\n              }\n            }\n          )\n        })\n        \n      //ustaw element w siatce\n      externalgrid.dmove(- externalgrid.attr('x') % gridSize, - externalgrid.attr('y') % gridSize)\n\n      //przenos element wewnatrz obszaru\n      externalgrid.dragInsideContainer()\n\n      //funkcja okreslajaca prawy przycisk\n      externalgrid.contextMenu()\n\n      //obserwuj zmiany\n      mutationObserver(externalgrid)\n    }\n  }\n     \n  //obróć element\n  rotate() {\n \n    var idElement = $('.custom-menu').attr('data')\n  \n    // This is the triggered action name\n    var rotatedObject = SVG.get(idElement)\n\n    // var t = new SVG.Matrix()\n    var t = rotatedObject.transform()\n\n    var rotationCenterX = rotatedObject.bbox().width / 2,\n      rotationCenterY = rotatedObject.bbox().height / 2\n\n    if (Math.round(t.rotation) == 0) {\n\n      //obroc svg nested\n      //  rotatedObject.transform({ rotation: 90 })\n      rotatedObject.rotate(90, rotationCenterX, rotationCenterY)\n\n      //zaktualizuj wspolrzedne polilinii po obrocie\n      rotatedObject.fire('rotated')\n\n      //obroc kazdy element w svg nested\n      rotatedObject.each(function (i, children) {\n        this.rotate(90, rotationCenterX, rotationCenterY)\n      })\n\n    }\n    if (Math.round(t.rotation) == 90) {\n      rotatedObject.transform({ rotation: -180 })\n      rotatedObject.fire('rotated')\n      rotatedObject.each(function (i, children) {\n        this.rotate(-180, rotationCenterX, rotationCenterY)\n      })\n\n    }\n    if (Math.round(t.rotation) == -180) {\n\n      rotatedObject.transform({ rotation: -90 })\n      rotatedObject.fire('rotated')\n\n      rotatedObject.each(function (i, children) {\n        this.rotate(-90, rotationCenterX, rotationCenterY)\n      })\n\n    }\n    if (Math.round(t.rotation) == -90) {\n\n      rotatedObject.transform({ rotation: 0 })\n      rotatedObject.fire('rotated')\n\n      rotatedObject.each(function (i, children) {\n        this.rotate(0, rotationCenterX, rotationCenterY)\n      })\n    }\n\n    $('.custom-menu').hide();\n  }\n\n\n  //usuń obiekt\n  deleteObject() {\n\n    //custom-menu zawiera identyfikator elementu przy ktorym custom-menu zostal wywolany\n    var idElement = $('.custom-menu').attr('data')\n\n    //sprawdz czy dany element jest juz zapisany w bazie danych (porownujemy nazwe elementu w bazie danych)\n    this.http.get<ExternalGrids[]>('api/ExternalGrid/GetBasedOnProject/' + this.projectId).subscribe(extgrids => {\n      extgrids.forEach(extgrid => {\n        //jesli istnieje w bazie danych to usun go\n        if (extgrid.id == idElement) {\n\n          let headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n          this.http.delete('api/ExternalGrid/' + extgrid.id, { headers }).subscribe(\n            data => { /*nic nie robimy */ },\n            err => console.error(err),\n            () => { alert('usunalem z bazy danych') }\n          );\n        }\n      })\n      //usun element z frontend\n      SVG.get(idElement).attr('attr', 'removed')\n      SVG.get(idElement).remove()\n      $('.custom-menu').hide();\n    })\n  }\n\n  //usuń polilinia\n  deletePolyline() {\n\n    //przy nacisnieciu otrzymujemy element - polyline background\n\n    //custom-menu zawiera identyfikator elementu przy ktorym custom-menu zostal wywolany\n    //tło polilinii\n    var idElement = $('.custom-menu-polyline').attr('data')\n\n   // var regex = /\\d+_\\d+/g //wychwytuj Id o budowie liczba_liczba\n   var regex = /\\w+_/g //wychwytuj Id o budowie word_word_\n    var polylineId = idElement.match(regex)\n    \n    var objectArray = []   \n\n    objectArray = polylineId[0].split('_') //było polylineId[0].split('_')\n\n    //usuń ostatni element, który ma postać \"\"\n    objectArray.pop()\n\n    console.log(objectArray)\n\n    //ustaw wezly jako wolne\n    for (var i = 0; i < objectArray.length; i++) {\n      objectArray[i] = SVG.get(objectArray[i])\n      objectArray[i].each(function () {\n        if (this.type == 'circle') {\n          this.attr('class', 'free')\n        }\n\n      })\n\n    }\n\n    //usun element z bazy danych\n    //let headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n    //this.http.delete('api/ExternalGrid/' + Number(SVG.get(idElement).attr('data')), { headers }).subscribe();\n\n    //dana polinia\n    var danaPolilinia = objectArray[0] + '_' + objectArray[1]\n\n    //okresl jako usuniety zeby nie reagowal w mutationObserver\n    SVG.get(idElement).attr('attr', 'removed')\n\n      //usuń węzeł szyny związany z polinią\n      var nodeId = SVG.get(idElement).attr('nodeId')\n      if (nodeId != undefined) {\n        SVG.get(nodeId).remove()\n      }\n\n    //usun element z frontend (dwa razy bo jest polilinia i tlo)\n    SVG.get(danaPolilinia).remove()\n    SVG.get(idElement).remove()\n   // SVG.get(polylineId[0]).remove()  \n\n    //$('#' + idElement).remove()\n\n    $('.custom-menu-polyline').hide();\n\n  }\n\n  //usuń polilinia\n  deleteBusbar() {\n\n    //przy nacisnieciu otrzymujemy element - polyline background\n\n    //custom-menu zawiera identyfikator elementu przy ktorym custom-menu zostal wywolany\n    //tło polilinii\n    var idElement = $('.custom-menu-busbar').attr('data')\n\n   \n   \n    //usun element z frontend (dwa razy bo jest polilinia i tlo)\n    SVG.get(idElement).remove()\n    //SVG.get(idElement).remove()\n   // SVG.get(polylineId[0]).remove()  \n\n    //$('#' + idElement).remove()\n\n    $('.custom-menu-busbar').hide();\n\n  }\n \n\n  //usun wszystkie elementy zaznaczone \n  deleteObjectsInDraggableNested() {\n\n    var draggableNested = SVG.get('draggableNested')\n    var elementArray: string[] = []\n    \n    draggableNested.each(function () {\n\n      //jeśli usuwasz polilinię to usuń też węzły na szynie, które są powiązane z tą polilinią\n      if(this.type == 'polyline' && this.attr('data') == 'background'){\n        //usuwaj jeśli jest to półączenie z szyną\n        if(this.attr('nodeId') != undefined) {\n\n          //i węzeł nie został wcześniej usunięty przy grupowym usuwaniu\n          if(SVG.get(this.attr('nodeId')) != null)\n          {\n            SVG.get(this.attr('nodeId')).remove()\n          }          \n        }         \n      }\n      //przepisz wartosci id elementow do tablicy żeby usunąć w następnym kroku z back-end\n      elementArray.push(this.attr('id'))\n      this.attr('attr', 'removed')\n      this.remove()\n    })\n\n\n    this.http.get<ExternalGrids[]>('api/ExternalGrid/GetBasedOnProject/' + this.projectId).subscribe(\n      extgrids => {\n        elementArray.forEach(extGridId => {\n          extgrids.forEach(extgrid => {\n            //jesli istnieje w bazie danych taki sam element to usun go (sprawdzanie na podstawie nazwy)\n            if (extgrid.id == parseInt(extGridId)) {\n              let headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n              this.http.delete('api/ExternalGrid/' + extgrid.id, { headers }).subscribe();\n            }\n          })\n        })\n      },\n      err => console.error(err),\n      () => { alert('usunalem z bazy danych') }\n    )\n    $('.custom-menu-draggablenested').hide();\n  }\n\n  dragover_handler(ev) {\n    ev.preventDefault()\n    // Set the dropEffect to move\n    ev.dataTransfer.dropEffect = 'move'\n  }\n}\n \n\n//gdy nacisniesz prawy przycisk w svgArea\nfunction contextmenuFunction() { \n\n  $('#svgArea').contextmenu(function (ev) {  \n    //ev.preventDefault()\n    \n\n    var elementSet = SVG.get('svgArea').select('svg')\n    var polylineSet = SVG.get('svgArea').select('polyline')\n\n    // jeśli klikniemy w obszar svg lub HTML lub custom-menu odznacz wszystkie wcześniej zaznaczone elementy\n    if (ev.target.nodeName == 'svg' || ev.target.nodeName == 'HTML' || ev.target.nodeName == 'LI') {\n      $('.custom-menu').hide()\n      $('.custom-menu-polyline').hide()\n      $('.custom-menu-draggablenested').hide()\n\n      //jesli blednie narysowany jest obszar zaznaczania usun go\n      if (SVG.get('svgArea').select('rect').first() != 'undefined') {\n        SVG.get('svgArea').select('rect').each(function () {\n          this.remove()\n        })\n\n      }\n\n\n      elementSet.each(function () {\n        //jeśli element ma przypisane jakieś attr\n        if (this.attr(\"attr\") && this.attr(\"attr\") != \"unselected\") {\n          this.attr({\n            attr: 'unselected', \n            opacity: 1\n          })\n        }\n      })\n      polylineSet.each(function () {\n        //jeśli element ma przypisane jakieś attr\n        if (this.attr(\"attr\") && this.attr(\"attr\")  != \"unselected\") {\n          //nie zmieniamy tła polilinii przy odznaczeniu\n          if (this.attr('data') != 'background') {\n            this.opacity(1)\n          }\n          this.attr('attr', 'unselected')\n        }\n      })\n\n\n    }\n\n    //usun wezly do przenoszenia polilinii\n    SVG.get('svgArea').select('circle').each(function () {\n      if (this.attr('class') == 'draggable') {\n        this.remove()\n      }\n    })\n\n    //usuń prostokąty do poszerzania szyny busbar\n    if (SVG.get('rightBusbarRect') != null && SVG.get('leftBusbarRect') != null) {\n      SVG.get('rightBusbarRect').remove()\n      SVG.get('leftBusbarRect').remove()\n    }\n\n    //wszystkie elementy path uzyskują czarny kolor\n    SVG.get('svgArea').select('path').each(function () {\n      $('#' + this.attr('id')).css({\n        stroke: 'black' \n      })\n    })\n\n\n\n\n  })\n}\n\n\nfunction clickSVGArea() {\n  $('#svgArea').click(function (ev) {\n\n    $('.custom-menu').hide()\n\n    //usuń prostokąty do poszerzania szyny busbar\n    /*\n    SVG.get('rightBusbarRect').remove()\n    SVG.get('leftBusbarRect').remove()\n    */\n  })\n\n}\n\n//zaznaczanie grupowe\nfunction selectMultipleGroups() {\n\n  // ustawienie obszaru rysowania przy wykorzystaniu biblioteki snap.svg\n  var paper = SVG.get('svgArea');\n\n  // group that will receive the selected items\n  var selections = paper.set()\n\n  var box\n  var ox = 0 //punkt poczatkowy\n  var oy = 0\n  var dx = 0 //zmiana pozycji\n  var dy = 0\n\n  //rysowanie obszaru zaznaczania\n  paper.on('mousedown', function (e) {\n\n    //usun wezly do przenoszenia polilinii\n    SVG.get('svgArea').select('circle').each(function () {\n      if (this.attr('class') == 'draggable') {\n        this.remove()\n      }\n    })\n\n    var rect = e.target.getBoundingClientRect();\n\n    // when mouse goes down over background, start drawing selection box\n    box = paper.rect().attr('stroke', 'black').back(); //back zeby lepiej sie klikalo   // obszar zaznaczania (x, y, width, height)\n    box.attr('fill', 'transparent')\n    box.attr('id', 'obszarzaznaczania');\n\n    box.attr('x', e.offsetX)\n    box.attr('y', e.offsetY)\n\n    ox = e.offsetX\n    oy = e.offsetY\n\n    paper.on('mousemove', function (e) {\n\n      dx = e.offsetX - ox\n      dy = e.offsetY - oy\n\n      //1 cwiartka\n      if (dx < 0 && dy > 0) {\n        box.attr('x', e.offsetX)\n        box.attr('width', -dx)\n        box.attr('height', dy)\n      }\n\n      //2 cwiartka\n      if (dx > 0 && dy < 0) {\n        box.attr('y', e.offsetY)\n        box.attr('width', dx)\n        box.attr('height', -dy)\n      }\n\n      //3 cwiartka\n      if (dx < 0 && dy < 0) {\n        box.attr('x', e.offsetX)\n        box.attr('y', e.offsetY)\n\n        box.attr('width', -dx)\n        box.attr('height', -dy)\n      }\n      //4 cwiartka\n      if (dx > 0 && dy > 0) {\n\n        box.attr('width', dx)\n        box.attr('height', dy)\n      }\n    })\n\n    paper.on('mouseup', function (e) {\n      //e.preventDefault\n      //wszystie elementy svg w obszarze svgArea\n      var elements = SVG.get('svgArea').select('svg')//SVG.get('svgArea').select('svg')\n      var polylines = SVG.get('svgArea').select('polyline') // elements.add(SVG.get('svgArea').select('polyline'))\n\n      //  elements.Add(SVG.get('svgArea').select('polyline'))\n      var xMinSelect = box.attr('x')\n      var xMaxSelect = box.attr('x') + box.attr('width')\n      var yMinSelect = box.attr('y')\n      var yMaxSelect = box.attr('y') + box.attr('height')\n\n      elements.each(function () {\n        if (this.attr('x') > xMinSelect && this.attr('x') < xMaxSelect && this.attr('y') > yMinSelect && this.attr('y') < yMaxSelect) {\n          //   console.log('zaznaczone')\n          if (this.attr('attr') == 'unselected') {\n            this.opacity(0.5)\n            this.attr('attr', 'selected')\n          }\n        }\n      })\n\n      //debugger;\n      polylines.each(function () {\n\n        //zaznaczenie polilinii\n        if (this.bbox().x > xMinSelect && this.bbox().x < xMaxSelect && this.bbox().y > yMinSelect && this.bbox().y < yMaxSelect) {\n\n          if (this.attr('attr') == 'unselected') {\n\n            //nie zmieniamy tła polilinii przy zaznaczeniu\n            if (this.attr('data') != 'background') {\n              this.opacity(0.5)\n            }\n            this.attr('attr', 'selected')\n          }\n        }\n\n\n      })\n      paper.off('mousemove')\n      box.attr('attr', 'removed')\n      box.remove()\n    })\n  })\n}\n\n// zaznaczanie i odznaczanie elementow w obszarze svgArea\nfunction selectShift() {\n\n  // jeśli naciśnięty jest shift to wszystkie elementy w svgArea otrzymują attrybut selectableShift\n  document.addEventListener('keydown', keydownshift)\n\n\n  document.addEventListener('keyup', keyupshift)\n\n}\n\n//nacisniecie shift\nfunction keydownshift(event) {\n  console.log('nacisnales shift')\n\n  var groupSet = SVG.get('svgArea').select('svg')\n  if (event.shiftKey && event.keyCode == 16) {\n    groupSet.each(function () {\n      // jeśli już zaznaczony to nie przypisuja selectableShift\n      this.attr({\n        class: 'shift',\n      })\n    })\n  }\n}\n\n//odpuszczenie shift\nfunction keyupshift(event) {\n  console.log('odpusciles shift')\n  //groupSet = Snap.selectAll('#svgArea g')\n  var groupSet = SVG.get('svgArea').select('svg')\n  if (event.shiftKey && event.keyCode == 16) {\n    groupSet.each(function () {\n      // jeśli już zaznaczony to nie przypisuja selectableShift\n      this.attr({\n        class: 'noshift',\n\n      })\n    })\n  }\n}\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/+diagram/diagram.component.ts","import { ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { diagramRouting } from './diagram.routing';\nimport {SmartadminModule} from \"../shared/smartadmin.module\";\nimport {DiagramComponent} from \"./diagram.component\";\n\nimport { ExternalGridFormComponent } from './../components/externalgrid-form/externalgrid-form.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    diagramRouting,\n      SmartadminModule,\n      ReactiveFormsModule\n  ],\n  declarations: [DiagramComponent, ExternalGridFormComponent ]\n})\nexport class DiagramModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/+diagram/diagram.module.ts","import { Routes, RouterModule } from '@angular/router';\nimport {DiagramComponent} from \"./diagram.component\";\nimport {ModuleWithProviders} from \"@angular/core\";\n\nexport const diagramRoutes: Routes = [\n    {\n        path: '',\n        component: DiagramComponent,\n        data: {\n            pageTitle: 'Diagram'\n        }\n    }\n];\n\nexport const diagramRouting: ModuleWithProviders = RouterModule.forChild(diagramRoutes);\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/+diagram/diagram.routing.ts","module.exports = \"\\n#externalgridform {\\n    display: none; \\n    position: relative;\\n    width: 400px;\\n    overflow: hidden;\\n    border: 1px solid #CCC;\\n    font-family: sans-serif;\\n    font-size: 13px;\\n    background-color: #FFF;\\n    color: #333;    \\n    border-radius: 5px;\\n    padding: 45px 15px 15px \\n \\n}\\n\\n#externalgridform:after {\\n    position: absolute;\\n    top: 15px;\\n    left: 15px;\\n    font-size: 12px;\\n    font-weight: 700;\\n    color: #959595;\\n    text-transform: uppercase;\\n    letter-spacing: 1px;\\n    content: \\\"External grid data\\\";\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/externalgrid-form/externalgrid-form.component.css\n// module id = ./src/app/components/externalgrid-form/externalgrid-form.component.css\n// module chunks = diagram.module","module.exports = \"<div id=\\\"externalgridform\\\">\\n \\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <p>\\n            <label>Name:</label>\\n            <input type=\\\"text\\\" formControlName=\\\"name\\\">\\n        </p>\\n        <p>\\n            <label>Type of node</label>\\n            <select formControlName=\\\"nodeType\\\">\\n                <option *ngFor=\\\"let nodeType of nodeTypes\\\" [value]=\\\"nodeType\\\">{{nodeType}}</option>\\n            </select>\\n        </p>\\n        <p>\\n            <label>Voltage angle [deg]:</label>\\n            <input type=\\\"number\\\" formControlName=\\\"voltageAngle\\\">\\n        </p>\\n        <p>\\n            <label>Voltage setpoint [p.u.]</label>\\n            <input type=\\\"number\\\" formControlName=\\\"voltageSetpoint\\\">\\n        </p>\\n        <p>\\n            <label>Active power [MW]</label>\\n            <input type=\\\"number\\\" formControlName=\\\"activePower\\\">\\n        </p>\\n        <p>\\n            <label>Reactive power [MVar]</label>\\n            <input type=\\\"number\\\" formControlName=\\\"reactivePower\\\">\\n        </p>\\n        <p>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Submit</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n        </p>\\n    </form>\\n\\n\\n</div>\\n\\n\\n<!--\\n\\n<div [hidden]=\\\"submitted\\\" id=\\\"externalgridform\\\">\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #extGridForm=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"nameExtGrid\\\">Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nameExtGrid\\\"\\n             required\\n             [(ngModel)]=\\\"extgrid.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\">\\n\\n        </div>\\n\\n        \\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"nodeType\\\">Type of node</label>\\n            <select class=\\\"form-control\\\" id=\\\"nodeType\\\">\\n                <option>SL</option>\\n                <option>PV</option>\\n                <option>PQ</option>\\n            </select>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"voltageAngle\\\">Voltage angle [deg]</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"voltageAngle\\\">\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"voltageSetpoint\\\">Voltage setpoint [p.u.]</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"voltageSetpoint\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"activePower\\\">Active power [MW]</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"activePower\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"reactivePower\\\">Reactive power [MVar]</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"reactivePower\\\">\\n        </div>\\n    \\n\\n        \\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"extGridForm.reset()\\\">New Hero</button>\\n        \\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"hideExtGridForm()\\\">Close</button>\\n        \\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveExtGridForm($event)\\\">Save</button>\\n    \\n   \\n    </form>\\n</div>\\n\\n-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/externalgrid-form/externalgrid-form.component.html\n// module id = ./src/app/components/externalgrid-form/externalgrid-form.component.html\n// module chunks = diagram.module","import { SvgAreaService } from './../../services/svgarea.service';\nimport { ExternalGrids } from './../../+data/externalgrids/externalgrids';\n\nimport { ShowDataService } from './../../services/show-data.service';\nimport { ProjectService } from './../../services/project.service';\nimport { Component } from '@angular/core';\nimport { AuthService } from 'app/services/auth/auth.service';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\nimport { FormGroup, FormControl, Validators, FormBuilder }\n    from '@angular/forms';\n\ndeclare const $: any;\ndeclare const SVG: any;\n\nconst httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json', 'charset': 'utf-8' })\n};\n\n@Component({\n    selector: 'externalgrid-form',\n    templateUrl: './externalgrid-form.component.html',\n    styleUrls: ['./externalgrid-form.component.css']\n})\n\nexport class ExternalGridFormComponent {\n\n\n    form: FormGroup;\n\n    name;\n    nodeType;\n    voltageAngle;\n    voltageSetpoint;\n    activePower;\n    reactivePower = new FormControl()\n\n    projectId: number\n\n    nodeTypes = [\n        'SL',\n        'PV',\n        'PQ'\n    ]\n\n    constructor(public svgAreaService: SvgAreaService, public fb: FormBuilder, public http: HttpClient, public projectService: ProjectService, private auth: AuthService, private showData: ShowDataService) {\n        this.getProjectId()\n        this.createInitialForm()\n    }\n\n    ngAfterViewInit() {\n\n        //w przypadku gdy formularz sie otworzy wpisz dane do formularza\n        const observer = new MutationObserver(mutations => {\n            if (mutations[0].attributeName == 'style' && document.getElementById('externalgridform').style.display == 'block') {\n\n                this.getDataIntoForm()\n            }\n        })\n\n        //obserwuj formularz\n        observer.observe(document.getElementById('externalgridform'), { attributes: true })\n    }\n\n    getProjectId() {\n        this.projectService.currentProjectId.subscribe(projectId => this.projectId = projectId)\n    }\n\n    createInitialForm() {\n\n        //id elementu przy ktorym zostal otwarty formularz\n        let idElement = $('#externalgridform').attr('data')\n\n\n        this.form = this.fb.group({\n            name: this.name,\n            nodeType: this.nodeType,\n            voltageAngle: this.voltageAngle,\n            voltageSetpoint: this.voltageSetpoint,\n            activePower: this.activePower,\n            reactivePower: this.reactivePower\n        });\n    }\n\n    getDataIntoForm() {\n        //id elementu przy ktorym zostal otwarty formularz\n        let idElement = $('#externalgridform').attr('data')\n\n        //przy otwieraniu wpisz w formularz dane z bazy danych \n        this.svgAreaService.getExternalGridWithId(idElement).subscribe(extgrid => {\n            this.form = this.fb.group({\n                name: extgrid.name,\n                nodeType: extgrid.nodeType,\n                voltageAngle: extgrid.voltageAngle,\n                voltageSetpoint: extgrid.voltageSetpoint,\n                activePower: extgrid.activePower,\n                reactivePower: extgrid.reactivePower\n            });\n        })\n\n    }\n\n\n    onSubmit() {\n\n        //id elementu przy ktorym zostal otwarty formularz\n        let idElement = $('#externalgridform').attr('data')\n\n        var objectSVG = SVG.get(idElement),\n        svgXML\n\n        //zapamietaj stan svg (pozycja i rotacja)\n        if (objectSVG.attr('transform') != undefined) {\n            svgXML = '<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"schemat\" attr=\"unselected\" class=\"noshift\" x=\"' + objectSVG.attr('x') + '\" y=\"' + objectSVG.attr('y') + '\" transform=\"' + objectSVG.attr('transform') + '\" style=\"overflow: visible;\"><path id=\"SvgjsPath1017\" d=\"M0,0,20,0,20,20,0,20,0,0.2,19.5,10,0,20M20,20,0.5,10,20,0\" transform=\"' + objectSVG.attr('transform') + '\" style=\"stroke: rgb(0, 0, 0); fill: rgb(255, 255, 255); cursor: pointer; stroke-width: 0.5;\"/><circle id=\"SvgjsCircle1018\" r=\"2\" cx=\"10\" cy=\"18\" transform=\"' + objectSVG.attr('transform') + '\" stroke=\"#000000\" stroke-width=\"0.5\" class=\"free\"/></svg>'\n        }\n        else {\n            svgXML = '<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"schemat\" attr=\"unselected\" class=\"noshift\" x=\"' + objectSVG.attr('x') + '\" y=\"' + objectSVG.attr('y') + '\" style=\"overflow: visible;\"><path id=\"SvgjsPath1017\" d=\"M0,0,20,0,20,20,0,20,0,0.2,19.5,10,0,20M20,20,0.5,10,20,0\" style=\"stroke: rgb(0, 0, 0); fill: rgb(255, 255, 255); cursor: pointer; stroke-width: 0.5;\"/><circle id=\"SvgjsCircle1018\" r=\"2\" cx=\"10\" cy=\"18\" stroke=\"#000000\" stroke-width=\"0.5\" class=\"free\"/></svg>'\n        }\n  \n\n\n        //sprawdz czy dany element jest juz zapisany w bazie danych\n        this.svgAreaService.getExternalGrid().subscribe(extgrids => {\n\n            //zwraca indeks pierwszego elementu tablicy, który spełnia kryteria postawione w funkcji testującej. W przeciwnym wypadku zwraca -1. \n            var idInDb = extgrids.findIndex((value: ExternalGrids) => {\n                return value.id == idElement\n            })\n\n            //nie ma jeszcze elementu w bazie danych, a wiec zapisz element w bazie\n            if (idInDb == -1) {\n                this.http.post('api/ExternalGrid/' + idElement,\n                    JSON.stringify({\n                        ID: idElement,\n                        Name: this.form.value.name,\n                        NodeNo: 0,\n                        NodeType: this.form.value.nodeType,\n                        VoltageAngle: this.form.value.voltageAngle,\n                        VoltageSetpoint: this.form.value.voltageSetpoint,\n                        ActivePower: this.form.value.activePower,\n                        ReactivePower: this.form.value.reactivePower,\n                        ProjectId: this.projectId,\n                        svgXML: svgXML\n                        \n\n                    }), httpOptions).subscribe();\n\n            }\n            //jesli jest w bazie danych to zaktualizuj parametry elementu \n            else {\n                this.http.put('api/ExternalGrid/' + idElement,\n                    JSON.stringify({\n                        ID: idElement,\n                        Name: this.form.value.name,\n                        NodeType: this.form.value.nodeType,\n                        VoltageAngle: this.form.value.voltageAngle,\n                        VoltageSetpoint: this.form.value.voltageSetpoint,\n                        ActivePower: this.form.value.activePower,\n                        ReactivePower: this.form.value.reactivePower,\n                        ProjectId: this.projectId,\n                        svgXML: svgXML\n\n                    }), httpOptions).subscribe();\n\n            }\n\n            document.getElementById('externalgridform').style.display = 'none'\n\n\n        })\n    }\n\n\n\n    cancel() {\n        document.getElementById('externalgridform').style.display = 'none'\n    }\n\n\n\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/externalgrid-form/externalgrid-form.component.ts"],"sourceRoot":"webpack:///"}